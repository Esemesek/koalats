{"version":3,"file":"index.umd.js","sources":["../src/error/CircularDependencyError.ts","../src/error/ComponentAlreadyExistError.ts","../src/error/ComponentNotFoundError.ts","../src/ComponentContainer.ts","../src/decorator/Component.ts","../src/Injector.ts","../src/index.ts"],"sourcesContent":["export default class CircularDependencyError extends Error {\n  constructor() {\n    super('There is cycle in dependencies');\n  }\n}\n","export default class ComponentAlreadyExistError extends Error {\n  constructor(name: string) {\n    super(`Component '${name}' already exists in container`);\n  }\n}\n","export default class ComponentNotFoundError extends Error {\n  constructor(name: string) {\n    super(`Component '${name}' does not exist in container`);\n  }\n}\n","import CircularDependencyError from './error/CircularDependencyError';\nimport ComponentAlreadyExistError from './error/ComponentAlreadyExistError';\nimport ComponentNotFoundError from './error/ComponentNotFoundError';\n\ninterface ComponentMap {\n  [name: string]: Object;\n}\n\nexport interface ConstructorMap {\n  [name: string]: {\n    componentConstructor: any;\n    dependencies: Array<string>;\n  }\n}\n\nexport default class ComponentContainer {\n  private static instance = new ComponentContainer();\n  private registeredComponents: ConstructorMap = {};\n  private components: ComponentMap = {};\n\n  constructor() {\n    return ComponentContainer.instance;\n  }\n\n  public static getInstance = (): ComponentContainer => ComponentContainer.instance;\n\n  public startContainer = () => {\n    if (this.areDepsCyclic()) {\n      throw new CircularDependencyError();\n    }\n\n    this.createDependencies();\n  }\n\n  public registerComponent = (name: string, componentConstructor: any, dependencies: Array<string>): void => {\n    if (this.registeredComponents[name] !== undefined) {\n      throw new ComponentAlreadyExistError(name);\n    }\n\n    this.registeredComponents[name] = {\n      componentConstructor,\n      dependencies,\n    };\n  }\n\n  public getComponent = (name: string): any => {\n    const component = this.components[name];\n    if (component === undefined) {\n      throw new ComponentNotFoundError(name);\n    }\n\n    return component;\n  }\n\n  private createDependencies = () => Object.keys(this.registeredComponents).forEach(this.createDependency);\n\n  private createNodeDependencies = (key: string) => {\n    this.registeredComponents[key].dependencies.forEach(this.createDependency)\n  }\n\n  private createDependency = (dep: string) => {\n    if (this.components[dep] === undefined) {\n      if (this.registeredComponents[dep].dependencies.length > 0) {\n        this.createNodeDependencies(dep);\n      }\n\n      this.components[dep] = new this.registeredComponents[dep].componentConstructor(\n        ...this.getDependenciesFromContainer(this.registeredComponents[dep].dependencies)\n      );\n    }\n  }\n\n  private getDependenciesFromContainer = (dependencies: string[]) => {\n    return dependencies.map(this.getComponent);\n  }\n\n  private areDepsCyclic = () => {\n    return Object.keys(this.registeredComponents).some((key: string) => {\n      return this.registeredComponents[key].dependencies.includes(key)\n        || this.isCycleInNode(key, this.registeredComponents[key].dependencies);\n    })\n  }\n\n  private isCycleInNode = (key: string, dependencies: string[]): boolean => {\n    return dependencies.some((dep: string) => {\n      if (this.registeredComponents[dep] === undefined) {\n        throw new ComponentNotFoundError(dep);\n      }\n\n      return dependencies.includes(key)\n        || this.isCycleInNode(key, this.registeredComponents[dep].dependencies);\n    });\n  }\n}\n","import ComponentContainer from '../ComponentContainer';\n\nconst Component = ({ name, dependencies = [] }: { name: string, dependencies?: string[] }) => {\n  return (target: any) => {\n    ComponentContainer.getInstance().registerComponent(name, target, dependencies);\n  }\n}\n\nexport default Component;\n","import ComponentContainer from './ComponentContainer';\n\nexport default class Injector {\n  static get = <T>(name: string): T => ComponentContainer.getInstance().getComponent(name);\n}\n","import ComponentContainer from './ComponentContainer';\nimport Component from './decorator/Component';\nimport Injector from './Injector';\n\nexport default {\n  startContainer: ComponentContainer.getInstance().startContainer,\n  Component,\n  Injector\n};\n"],"names":[],"mappings":"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"}